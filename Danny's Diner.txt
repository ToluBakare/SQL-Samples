CREATE SCHEMA dannys_diner;
SET search_path = dannys_diner;

CREATE TABLE sales (
  customer_id VARCHAR(1),
  order_date DATE,
  product_id INTEGER
);


INSERT INTO sales
  (customer_id, order_date, product_id)
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
 

CREATE TABLE menu (
  product_id INTEGER,
  product_name VARCHAR(5),
  price INTEGER
);

INSERT INTO menu
  (product_id, product_name, price)
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
  

CREATE TABLE members (
  customer_id VARCHAR(1) NOT NULL,
  join_date DATE
);

INSERT INTO members
  (customer_id, join_date)
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');
  
#What is the total amount each customer spent at the restaurant?
  SELECT  s.customer_id, COUNT(ALL (s.product_id)), SUM(ALL price) total  
  FROM (sales s
  JOIN menu m ON m.product_id = s.product_id)
  GROUP BY   s.customer_id
  ORDER BY s.customer_id;
  
#2How many days has each customer visited the restaurant?
  SELECT customer_id, COUNT(DISTINCT(order_date))
  FROM sales
  GROUP BY customer_id;

#3What was the first item from the menu purchased by each customer?
  SELECT  DISTINCT product_name, s.customer_id, order_date   
  FROM (sales s
  JOIN menu m ON m.product_id = s.product_id)
  GROUP BY s.customer_id; 

#4What was the most purchased item on the menu and how many times was it purchased by all customers?
  SELECT  product_name, COUNT(s.product_id) ct   
  FROM (sales s
  JOIN menu m ON m.product_id = s.product_id)
  GROUP BY s.product_id
  ORDER BY ct DESC
  LIMIT 1;
  
#5Which item was the most popular for each customer?
	WITH r AS (SELECT s.customer_id, product_name, COUNT(s.product_id) ct, 
			   DENSE_RANK () OVER (PARTITION BY s.customer_id ORDER BY COUNT(s.product_id) DESC) AS r 
	FROM sales s
	JOIN menu m ON m.product_id = s.product_id
	GROUP BY s.customer_id, s.product_id, product_name)
  
	SELECT  customer_id, ct, product_name
	FROM r 
	WHERE r =1; 
  
#6Which item was purchased first by the customer after they became a member?
	WITH ranks AS (SELECT m.customer_id,  mn.product_name, join_date, order_date,
    DENSE_RANK () OVER (PARTITION BY s.customer_id ORDER BY order_date ASC) AS ranks
	FROM sales s JOIN menu mn
		ON s.product_id = mn.product_id
		JOIN members m
		ON  s. customer_id = m.customer_id
	WHERE  s.order_date >= m.join_date )
    
    SELECT *
    FROM ranks
    WHERE ranks =1;
  
#7Which item was purchased just before the customer became a member?
	WITH ranks AS (SELECT m.customer_id, join_date, order_date, product_name, 
    DENSE_RANK () OVER (PARTITION BY m.customer_id ORDER BY order_date DESC) AS ranks 
	FROM   sales s JOIN members m 
		ON  s. customer_id = m.customer_id
        JOIN menu mn ON s.product_id = mn.product_id
	WHERE  s.order_date < m.join_date) 
    
    SELECT *
    FROM ranks
    WHERE ranks=1;
		
        
#8What is the total items and amount spent for each member before they became a member?
	SELECT s.customer_id, COUNT(s.product_id) ct, SUM(price) Total_Amount, s.order_date, mb.join_date
    FROM members mb JOIN sales s
		ON s.customer_id=mb.customer_id
	JOIN menu m 
		ON m.product_id=s.product_id
	WHERE order_date < join_date
    GROUP BY s.customer_id;
	
#9If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
	WITH POINTS AS (SELECT  product_name, price, product_id, 
    CASE WHEN product_name='sushi' THEN price *20 
		 WHEN  product_name != 'sushi' THEN price*10 END AS points
	FROM menu )
    SELECT s.customer_id, SUM(points) points
    FROM sales s  JOIN points p
		ON s.product_id=p.product_id
	GROUP BY s.customer_id;
	
    
#10In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?
	SELECT customer_id, SUM(total_points) 
    FROM(WITH points AS (SELECT s.customer_id, (order_date-join_date) AS first_week, order_date, price, product_name
    FROM sales s JOIN members mb
		ON s.customer_id=mb.customer_id
        JOIN menu m 
        ON m.product_id=s.product_id)
	
    SELECT customer_id, order_date, CASE WHEN first_week BETWEEN 0 AND 7 THEN price*20
			WHEN (first_week <0 OR first_week>7) AND product_name='sushi'THEN price*20
            WHEN (first_week <0 OR first_week>7) AND product_name!='sushi' THEN price*10
            END AS total_points
	FROM points
    WHERE EXTRACT(MONTH FROM order_date)=1) as mth
    GROUP BY customer_id
	